|Bonus
clk => controller:ctrl_inst.clk
rst => controller:ctrl_inst.rst
a => encode:encoder_inst.a
b => encode:encoder_inst.b
c => encode:encoder_inst.c
d => encode:encoder_inst.d
start_x => controller:ctrl_inst.start_x
start_y => controller:ctrl_inst.start_y
SCL_x << controller:ctrl_inst.SCL_x
SCL_y << controller:ctrl_inst.SCL_y
SDA_x << controller:ctrl_inst.SDA_x
SDA_y << controller:ctrl_inst.SDA_y


|Bonus|encode:encoder_inst
a => Mux0.IN16
a => Mux1.IN16
a => Mux2.IN8
a => Mux3.IN8
b => Mux0.IN17
b => Mux1.IN17
b => Mux2.IN9
b => Mux3.IN9
c => Mux0.IN18
c => Mux1.IN18
c => Mux2.IN10
d => Mux0.IN19
d => Mux1.IN19
d => Mux3.IN10
romStart[0] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
romStart[1] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
romStart[2] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
romStart[3] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
romStart[4] <= <GND>
romStart[5] <= <GND>
romStart[6] <= <GND>
romStart[7] <= <GND>
romStart[8] <= <GND>
romStart[9] <= <GND>
romStart[10] <= <GND>
romStart[11] <= <GND>
romStart[12] <= <GND>
romStart[13] <= <GND>
romStart[14] <= <GND>
romStart[15] <= <GND>
romStart[16] <= <GND>
romStart[17] <= <GND>
romStart[18] <= <GND>
romStart[19] <= <GND>
romStart[20] <= <GND>
romStart[21] <= <GND>
romStart[22] <= <GND>
romStart[23] <= <GND>
romStart[24] <= <GND>
romStart[25] <= <GND>
romStart[26] <= <GND>
romStart[27] <= <GND>
romStart[28] <= <GND>
romStart[29] <= <GND>
romStart[30] <= <GND>
romStart[31] <= <GND>


|Bonus|controller:ctrl_inst
clk => rom_x:rom_x_inst.clk
clk => rom_y:rom_y_inst.clk
clk => clock_divider:clkd.clk_in
rst => i2c_write:i2c_x_inst.rst
rst => rom_addr_y[11].ACLR
rst => rom_addr_y[10].ACLR
rst => rom_addr_y[9].ACLR
rst => rom_addr_y[8].ACLR
rst => rom_addr_y[7].ACLR
rst => rom_addr_y[6].ACLR
rst => rom_addr_y[5].ACLR
rst => rom_addr_y[4].ACLR
rst => rom_addr_y[3].ACLR
rst => rom_addr_y[2].ACLR
rst => rom_addr_y[1].ACLR
rst => rom_addr_y[0].ACLR
rst => start_write_x.ACLR
rst => start_write_y.ACLR
rst => rom_addr_y[12].ACLR
rst => rom_addr_y[13].ACLR
rst => rom_addr_x[0].ACLR
rst => rom_addr_x[1].ACLR
rst => rom_addr_x[2].ACLR
rst => rom_addr_x[3].ACLR
rst => rom_addr_x[4].ACLR
rst => rom_addr_x[5].ACLR
rst => rom_addr_x[6].ACLR
rst => rom_addr_x[7].ACLR
rst => rom_addr_x[8].ACLR
rst => rom_addr_x[9].ACLR
rst => rom_addr_x[10].ACLR
rst => rom_addr_x[11].ACLR
rst => rom_addr_x[12].ACLR
rst => rom_addr_x[13].ACLR
rst => i2c_write:i2c_y_inst.rst
romStart[0] => Add1.IN64
romStart[0] => Mult1.IN42
romStart[1] => Add1.IN63
romStart[1] => Mult1.IN41
romStart[2] => Add1.IN62
romStart[2] => Mult1.IN40
romStart[3] => Add1.IN61
romStart[3] => Mult1.IN39
romStart[4] => Add1.IN60
romStart[4] => Mult1.IN38
romStart[5] => Add1.IN59
romStart[5] => Mult1.IN37
romStart[6] => Add1.IN58
romStart[6] => Mult1.IN36
romStart[7] => Add1.IN57
romStart[7] => Mult1.IN35
romStart[8] => Add1.IN56
romStart[8] => Mult1.IN34
romStart[9] => Add1.IN55
romStart[9] => Mult1.IN33
romStart[10] => Add1.IN54
romStart[10] => Mult1.IN32
romStart[11] => Add1.IN53
romStart[11] => Mult1.IN31
romStart[12] => Add1.IN52
romStart[12] => Mult1.IN30
romStart[13] => Add1.IN51
romStart[13] => Mult1.IN29
romStart[14] => Add1.IN50
romStart[14] => Mult1.IN28
romStart[15] => Add1.IN49
romStart[15] => Mult1.IN27
romStart[16] => Add1.IN48
romStart[16] => Mult1.IN26
romStart[17] => Add1.IN47
romStart[17] => Mult1.IN25
romStart[18] => Add1.IN46
romStart[18] => Mult1.IN24
romStart[19] => Add1.IN45
romStart[19] => Mult1.IN23
romStart[20] => Add1.IN44
romStart[20] => Mult1.IN22
romStart[21] => Add1.IN43
romStart[21] => Mult1.IN21
romStart[22] => Add1.IN42
romStart[22] => Mult1.IN20
romStart[23] => Add1.IN41
romStart[23] => Mult1.IN19
romStart[24] => Add1.IN40
romStart[24] => Mult1.IN18
romStart[25] => Add1.IN39
romStart[25] => Mult1.IN17
romStart[26] => Add1.IN38
romStart[26] => Mult1.IN16
romStart[27] => Add1.IN37
romStart[27] => Mult1.IN15
romStart[28] => Add1.IN36
romStart[28] => Mult1.IN14
romStart[29] => Add1.IN35
romStart[29] => Mult1.IN13
romStart[30] => Add1.IN34
romStart[30] => Mult1.IN12
romStart[31] => Add1.IN33
romStart[31] => Mult1.IN11
start_x => start_write_x.IN1
start_y => rom_addr_y[10].IN1
SCL_x <= i2c_write:i2c_x_inst.SCL
SCL_y <= i2c_write:i2c_y_inst.SCL
SDA_x <= i2c_write:i2c_x_inst.SDA
SDA_y <= i2c_write:i2c_y_inst.SDA


|Bonus|controller:ctrl_inst|rom_x:rom_x_inst
clk => data[0]~reg0.CLK
clk => data[1]~reg0.CLK
clk => data[2]~reg0.CLK
clk => data[3]~reg0.CLK
clk => data[4]~reg0.CLK
clk => data[5]~reg0.CLK
clk => data[6]~reg0.CLK
clk => data[7]~reg0.CLK
addr[0] => rom_data.RADDR
addr[1] => rom_data.RADDR1
addr[2] => rom_data.RADDR2
addr[3] => rom_data.RADDR3
addr[4] => rom_data.RADDR4
addr[5] => rom_data.RADDR5
addr[6] => rom_data.RADDR6
addr[7] => rom_data.RADDR7
addr[8] => rom_data.RADDR8
addr[9] => rom_data.RADDR9
addr[10] => rom_data.RADDR10
addr[11] => rom_data.RADDR11
addr[12] => rom_data.RADDR12
addr[13] => rom_data.RADDR13
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[5] <= data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[6] <= data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[7] <= data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Bonus|controller:ctrl_inst|rom_y:rom_y_inst
clk => data[0]~reg0.CLK
clk => data[1]~reg0.CLK
clk => data[2]~reg0.CLK
clk => data[3]~reg0.CLK
clk => data[4]~reg0.CLK
clk => data[5]~reg0.CLK
clk => data[6]~reg0.CLK
clk => data[7]~reg0.CLK
addr[0] => rom_data.RADDR
addr[1] => rom_data.RADDR1
addr[2] => rom_data.RADDR2
addr[3] => rom_data.RADDR3
addr[4] => rom_data.RADDR4
addr[5] => rom_data.RADDR5
addr[6] => rom_data.RADDR6
addr[7] => rom_data.RADDR7
addr[8] => rom_data.RADDR8
addr[9] => rom_data.RADDR9
addr[10] => rom_data.RADDR10
addr[11] => rom_data.RADDR11
addr[12] => rom_data.RADDR12
addr[13] => rom_data.RADDR13
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[5] <= data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[6] <= data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[7] <= data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Bonus|controller:ctrl_inst|i2c_write:i2c_x_inst
clk => sda_int.IN1
clk => bit_cnt[1].IN1
clk => state.STOP.IN1
clk => state.ACK.IN1
clk => state.WRITE.IN1
clk => state.IDLE.IN1
clk => SCL.DATAIN
rst => bit_cnt[0].ACLR
rst => sda_int.PRESET
rst => bit_cnt[1].ACLR
rst => bit_cnt[2].ACLR
rst => state.ACK_138.ACLR
rst => state.WRITE_147.ACLR
rst => state.STARTs_156.ACLR
rst => state.IDLE_165.PRESET
start => state.STOP.IN1
start => Selector5.IN0
start => Selector6.IN0
start => Selector7.IN0
wdata[0] => Mux0.IN7
wdata[1] => Mux0.IN6
wdata[2] => Mux0.IN5
wdata[3] => Mux0.IN4
wdata[4] => Mux0.IN3
wdata[5] => Mux0.IN2
wdata[6] => Mux0.IN1
wdata[7] => Mux0.IN0
SCL <= clk.DB_MAX_OUTPUT_PORT_TYPE
SDA <= sda_int.DB_MAX_OUTPUT_PORT_TYPE


|Bonus|controller:ctrl_inst|i2c_write:i2c_y_inst
clk => sda_int.IN1
clk => bit_cnt[1].IN1
clk => state.STOP.IN1
clk => state.ACK.IN1
clk => state.WRITE.IN1
clk => state.IDLE.IN1
clk => SCL.DATAIN
rst => bit_cnt[0].ACLR
rst => sda_int.PRESET
rst => bit_cnt[1].ACLR
rst => bit_cnt[2].ACLR
rst => state.ACK_138.ACLR
rst => state.WRITE_147.ACLR
rst => state.STARTs_156.ACLR
rst => state.IDLE_165.PRESET
start => state.STOP.IN1
start => Selector5.IN0
start => Selector6.IN0
start => Selector7.IN0
wdata[0] => Mux0.IN7
wdata[1] => Mux0.IN6
wdata[2] => Mux0.IN5
wdata[3] => Mux0.IN4
wdata[4] => Mux0.IN3
wdata[5] => Mux0.IN2
wdata[6] => Mux0.IN1
wdata[7] => Mux0.IN0
SCL <= clk.DB_MAX_OUTPUT_PORT_TYPE
SDA <= sda_int.DB_MAX_OUTPUT_PORT_TYPE


|Bonus|controller:ctrl_inst|clock_divider:clkd
clk_in => temp_clk.CLK
clk_in => counter[0].CLK
clk_in => counter[1].CLK
clk_in => counter[2].CLK
clk_in => counter[3].CLK
clk_in => counter[4].CLK
clk_in => counter[5].CLK
clk_in => counter[6].CLK
reset => temp_clk.ACLR
reset => counter[0].ACLR
reset => counter[1].ACLR
reset => counter[2].ACLR
reset => counter[3].ACLR
reset => counter[4].ACLR
reset => counter[5].ACLR
reset => counter[6].ACLR
clk_out <= temp_clk.DB_MAX_OUTPUT_PORT_TYPE


